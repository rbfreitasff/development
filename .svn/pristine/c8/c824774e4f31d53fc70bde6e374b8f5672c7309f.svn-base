VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "CNF400"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'------------------------------------------------------------------------------------------------------'
' Classe NFC-e Versão 4.00
' Autor: Robinson
' Data da Criação: 20/06/2018
'------------------------------------------------------------------------------------------------------'

Option Explicit

Public Function FCartaCorrecao(ByVal iNumero As Long, ByVal sMotivo As String) As String
On Error GoTo Erro
Dim rsNF As New ADODB.Recordset
'''''Dim rsEmpresa As New ADODB.Recordset
Dim rsUFs As New ADODB.Recordset
Dim sHora As String

   sHora = Format(Time - TimeValue("00:10"), "hh:mm")

   Set rsNF = cnSistema.Execute("Select * From " & I_TabelasNF & " WHERE Numero=" & iNumero)
   If Not rsNF.EOF Then
'''''      Set rsEmpresa = cnSistema.Execute("SELECT * FROM Empresa")
      Set rsUFs = cnSistema.Execute("Select * From " & I_TabelaUFs & " WHERE idUF=" & rsEmpresa!idUF)

      Open I_UnidadeNFe & I_PastaUNINFe & "Notas\Notas.TXT" For Output As #1
      
      Print #1, FTAGPrincipal("Versao")
      Print #1, FTAGPrincipal("EnvioEvento")
      Print #1, FTAG("idLote", "1")
      Print #1, FTAGPrincipal("Evento")
      Print #1, "<infEvento Id=" & Chr(34) & "ID110110" & rsNFs!cNF & "01" & Chr(34) & ">"
      Print #1, FTAG("cOrgao", I_EmpresaCodigoUF)
      Print #1, FTAG("tpAmb", I_AmbienteNF)                                                             ' 1 - Produção ou 2 - Homologação
      Print #1, FTAG("CNPJ", I_Empresa_CNPJ_CPF)
      Print #1, FTAG("chNFe", rsNFs!cNF)
'      Print #1, FTAG("dhEvento", FData("P", Date, Time))
      Print #1, FTAG("dhEvento", FData("P", Date, sHora))
      Print #1, FTAG("tpEvento", "110110")
      Print #1, FTAG("nSeqEvento", "1")
      Print #1, FTAG("verEvento", "1.00")
      Print #1, "<detEvento versao=" & Chr(34) & "1.00" & Chr(34) & ">"
      Print #1, FTAG("descEvento", "Carta de Correcao")
''         Print #1, "<nProt>" & rsNFCe!Protocolo & "</nProt>"
      Print #1, FTAG("xCorrecao", sMotivo)
      Print #1, FTAG("xCondUso", "A Carta de Correcao e disciplinada pelo paragrafo 1o-A do art. 7o do Convenio S/N, de 15 de dezembro de 1970 e pode ser utilizada para regularizacao de erro ocorrido na emissao de documento fiscal, desde que o erro nao esteja relacionado com: I - as variaveis que determinam o valor do imposto tais como: base de calculo, aliquota, diferenca de preco, quantidade, valor da operacao ou da prestacao; II - a correcao de dados cadastrais que implique mudanca do remetente ou do destinatario; III - a data de emissao ou de saida.")
      Print #1, "</detEvento>"
      Print #1, "</infEvento>"
      Print #1, "</evento>"
      Print #1, "</envEvento>"
      Close #1

      Call FArquivosNF("CARTACORRECAO")
   End If

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FCartaCorrecao")
End Function

Public Function FInutilizarNumero(ByRef iNumero As String, ByRef sJustificativa As String) As String
On Error GoTo Erro
Dim rsVerificar As New ADODB.Recordset
Dim rsUFs As New ADODB.Recordset
'Dim sEmpresaNFCe As String

   Set rsVerificar = cnSistema.Execute("SELECT * FROM NFeInutilizadas WHERE Numero = " & iNumero)
   If rsVerificar.EOF Then
      Set rsUFs = cnSistema.Execute("SELECT * FROM " & I_TabelaUFs & " WHERE idUF = " & I_idEmpresaUF)

'''''      Open I_UnidadeNFe & "NF-e\Notas\Notas.TXT" For Output As #1
'''''
'''''      Print #1, "tpAmb|" & LerArquivoINI("NFe", "Ambiente", CaminhoINI & "\System.ini") ' 1 - Produção ou 2 - Homologação
'''''      Print #1, "versao|4.00"
'''''      Print #1, "cUF|" & rsUFs!Codigo
'''''      Print #1, "ano|" & Format(Date, "yy")
'''''      Print #1, "CNPJ|" & RemoveCaracteres(I_Empresa_CNPJ_CPF)
'''''      Print #1, "mod|55"
'''''      Print #1, "serie|1"
'''''      Print #1, "nNFIni|" & Trim(iNumero)
'''''      Print #1, "nNFFin|" & Trim(iNumero)
'''''      Print #1, "xJust|" & sJustificativa
      
' Exemplo
' ID41107647234900043055001000000101000000101
' ID = ID
' ESTADO = 41
' ANO = 10
' CNPJ = 76472349000430
' MODELO = 55
' SERIE = 001
' NUMERO INICIAL = 000000101
' NUMERO FINAL = 000000101


      
      Open I_UnidadeNFe & I_PastaUNINFe & "Notas\Notas.TXT" For Output As #1

      Print #1, FTAGPrincipal("Versao")
      Print #1, "<consSitNFe xmlns=" & Chr(34) & "http://www.portalfiscal.inf.br/nfe" & Chr(34) & " versao=" & Chr(34) & "4.00" & Chr(34) & ">"
      Print #1, Space(2) & "<infInut Id=ID" & I_EmpresaCodigoUF & Format(Date, "yy") & I_Empresa_CNPJ_CPF & I_ModeloNF & "001" & StrZero(rsNFs!cNF, 9) & StrZero(rsNFs!cNF, 9) & ">"
      Print #1, Space(4) & FTAG("tpAmb", I_AmbienteNF)                                                  ' 1 - Produção ou 2 - Homologação
      Print #1, Space(4) & FTAG("xServ", "INUTILIZAR")
      Print #1, Space(4) & FTAG("cUF", I_EmpresaCodigoUF)
      Print #1, Space(4) & FTAG("ano", Format(Date, "yy"))
      Print #1, Space(4) & FTAG("CNPJ", I_Empresa_CNPJ_CPF)
      Print #1, Space(4) & FTAG("mod", I_ModeloNF)
      Print #1, Space(4) & FTAG("serie", "1")
      Print #1, Space(4) & FTAG("nNFIni", iNumero)
      Print #1, Space(4) & FTAG("nNFFin", iNumero)
      Print #1, Space(4) & FTAG("xJust", sJustificativa)
      Print #1, Space(2) & "</infInut>"
      Print #1, "</inutNFe>"
      Close #1

      Call FArquivosNF("INUTILIZARNUMERO")

      cnSistema.Execute "Insert Into NFeInutilizadas (ChaveNFe,Numero,Data,Protocolo) " & _
                        "Values ('','" & iNumero & "','" & Date & "','')"
                        
      FInutilizarNumero = "Número enviado para ser inutilizado"
   Else
      FInutilizarNumero = "Número já Inutilizado"
   End If

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FInutilizarNumero")
End Function

Public Function FConsultarNumero(ByVal iNumero As Long) As String
On Error GoTo Erro

   If Not rsNFs.EOF Then
      ' Copiar XML para ser Reprocessado a fim de corrigir duplicidade
      Call FArquivosNF("ARQUIVOPROCESSAMENTO")

      ' Envia solicitação de consulta
      Open I_UnidadeNFe & I_PastaUNINFe & "Notas\Notas.TXT" For Output As #1
      
      Print #1, FTAGPrincipal("Versao")
      Print #1, "<consSitNFe xmlns=" & Chr(34) & "http://www.portalfiscal.inf.br/nfe" & Chr(34) & " versao=" & Chr(34) & "4.00" & Chr(34) & ">"
      Print #1, Space(2) & FTAG("tpAmb", I_AmbienteNF)                                                  ' 1 - Produção ou 2 - Homologação
      Print #1, Space(2) & FTAG("xServ", "CONSULTAR")
      Print #1, Space(2) & FTAG("tpEmis", "1")
      Print #1, Space(2) & FTAG("chNFe", rsNFs!cNF)
      Print #1, "</consSitNFe>"
      Close #1
      
      Call FArquivosNF("CONSULTARNUMERO")
   End If

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FConsultarNumero")
End Function

Public Function FCancelarNota(ByVal iNumero As Long, ByVal sMotivo As String) As String
On Error GoTo Erro
Dim sHora As String

   sHora = Format(Time - TimeValue("00:10"), "hh:mm")

   Open I_UnidadeNFe & I_PastaUNINFe & "Notas\Notas.TXT" For Output As #1
   
   Print #1, FTAGPrincipal("Versao")
   Print #1, FTAGPrincipal("EnvioEvento")
   Print #1, FTAG("idLote", "1")
   Print #1, FTAGPrincipal("Evento")
   Print #1, "<i" & I_TabelasNF & "vento Id=" & Chr(34) & "ID110111" & rsNFs!cNF & "01" & Chr(34) & ">"
   Print #1, FTAG("cOrgao", I_EmpresaCodigoUF)
   Print #1, FTAG("tpAmb", I_AmbienteNF)
   Print #1, FTAG("CNPJ", I_Empresa_CNPJ_CPF)
   Print #1, FTAG("ch" & I_TabelasNF, rsNFs!cNF)
'   Print #1, FTAG("dhEvento", FData("P", Date, Time))
   Print #1, FTAG("dhEvento", FData("P", Date, sHora))
   Print #1, FTAG("tpEvento", "110111")
   Print #1, FTAG("nSeqEvento", "1")
   Print #1, FTAG("verEvento", "1.00")
   Print #1, "<detEvento versao=" & Chr(34) & "1.00" & Chr(34) & ">"
   Print #1, FTAG("descEvento", "Cancelamento")
   Print #1, FTAG("nProt", rsNFs!Protocolo)
   Print #1, FTAG("xJust", sMotivo)
   Print #1, "</detEvento>"
   Print #1, "</i" & I_TabelasNF & "vento>"
   Print #1, "</evento>"
   Print #1, "</envEvento>"
   Close #1

   Call FArquivosNF("CANCELARNOTA")

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FCancelarNota")
End Function

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'
'
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Verifica se XML foi autorizado e atualiza a base
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function FVerificaAprovacaoXML(iNumero As Long, dData As Date, sChave As String, iSituacao As Integer)
On Error GoTo Erro

   If iSituacao <> NFE_SIT_APROVADA And iSituacao <> NFE_SIT_CANCELADA Then
      If Dir(I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Enviados\Autorizados\" & Format(dData, "yyyymm") & "\" & sChave & "-procNFe.XML") <> "" Then
         cnSistema.Execute "Update " & I_TabelasNF & " set " & _
                  "Situacao = 2 " & _
                  "Where Numero = " & iNumero
      
         ' Recarregar Situação das notas
         frmGerenciarNF.lblProcessamento.Caption = ""
         Carrega_View ("Carregar")
      End If
   End If
      
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FVerificaAprovacaoXML")
End Function

' Verifica se XML de Cancelamento não possui erro
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function FVerificaErroCancelamento(sChave As String)
On Error GoTo Erro
Dim handle As Integer
Dim Linha As String
Dim bRetorno As Boolean
Dim strMensagem As String
   
   If Dir(I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Retorno\" & sChave & "-can.err") <> "" Then
      handle = FreeFile
      Open I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Retorno\" & sChave & "-can.err" For Input As #handle

      bRetorno = False
      While Not EOF(handle)
         Line Input #handle, Linha

         strMensagem = strMensagem & Linha & Chr(13)
      Wend

      MsgBox strMensagem, vbExclamation + vbOKOnly, "Erro de cancelamento da NFe"
      Close #handle

      Kill I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & sChave & "-can.err"
   End If
     
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FVerificaErroCancelamento")
End Function

' Atualiza Protocolo
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function FAtualizarProtocolo(iNumero As Long, dData As Date, sChave As String)
On Error GoTo Erro
Dim handle As Integer
Dim Linha As String
Dim bRetorno As Boolean
Dim strMensagem As String

'   Set rsVerificar = cnSistema.Execute("Select * From NFe WHERE Numero=" & iNumero)

'   If IsNull(rsVerificar!Protocolo) Or Trim(rsVerificar!Protocolo) = "" Then
'''   If bStatusProtocolo Then
      Dim nProtocolo As String
      
      If Dir(I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Enviados\Autorizados\" & Format(dData, "yyyymm") & "\" & sChave & "-procNFe.XML") <> "" Then
         handle = FreeFile
         Open I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Enviados\Autorizados\" & Format(dData, "yyyymm") & "\" & sChave & "-procNFe.XML" For Input As #handle
         
         Line Input #handle, Linha
         
         nProtocolo = PesquisarTAG(Linha, "nProt")
         
         If Trim(nProtocolo) <> "" Then
            cnSistema.Execute "Update " & I_TabelasNF & " set " & _
                     "Protocolo = '" & nProtocolo & "' " & _
                     "Where Numero = " & iNumero
         End If
         
         Close #handle
      End If
'''   End If
     
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FAtualizarProtocolo")
End Function

' Verifica se cancelamento foi autorizado
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function FVerificaAutorizacaoCancelamento(iNumero As Long, dData As Date, sChave As String, iSituacao As Integer)
On Error GoTo Erro
Dim handle As Integer
Dim Linha As String
Dim bRetorno As Boolean
Dim strMensagem As String
Dim nProtocolo As String

'   sEmpresaNFe = LerArquivoINI("NFe", "Empresa", CaminhoINI & "\System.ini")
   If Dir(I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Retorno\" & sChave & "-ret-env-canc.xml") <> "" And iSituacao <> 3 Then
   '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
      handle = FreeFile
      Open I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Retorno\" & sChave & "-ret-env-canc.XML" For Input As #handle

      Line Input #handle, Linha

      nProtocolo = PesquisarTAG(Linha, "nProt")

      Close #handle

      If Trim(nProtocolo) <> "" Then
         cnSistema.Execute "Update " & I_TabelasNF & " set " & _
                  "ProtocoloCancelamento = '" & nProtocolo & "', " & _
                  "Situacao = 3 " & _
                  "Where Numero = " & iNumero
                  
         ' Recarregar Situação das notas
         Carrega_View ("Carregar")

         FileCopy I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Retorno\" & sChave & "-can.XML", I_UnidadeNFe & I_PastaUNINFe & I_EmpresaNF & "\Enviados\Autorizados\" & Format(dData, "yyyymm") & "\" & sChave & "-can.XML"
      End If
   End If

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FVerificaAutorizacaoCancelamento")
End Function

Public Function ConverterTXT_XML(iId As Long, iNumero As Long, dData As Date, sChave As String)
On Error GoTo Erro
Dim handle As Integer
Dim Linha As String
Dim bRetorno As Boolean
Dim strMensagem As String

Dim rsVerificar As New ADODB.Recordset

   ' Verifica se XML foi convertido com sucesso
   ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'   sEmpresaNFe = LerArquivoINI("NFe", "Empresa", CaminhoINI & "\System.ini")
'   Set rsVerificar = cnSistema.Execute("Select * From NFe WHERE Numero=" & iNumero)
'   If Not rsVerificar.EOF Then
      If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(dData, "dd_mm_yyyy") & "-nfe.txt") <> "" Then
         ' Atualizar Chave da NFe
         handle = FreeFile
         Open I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(dData, "dd_mm_yyyy") & "-nfe.txt" For Input As #handle
   
         bRetorno = False
         While Not EOF(handle)
            Line Input #handle, Linha
''            If PesquisarTAG(Linha, "cStat") = "01" Then
''               bRetorno = True
''            End If
            If Mid(Linha, 1, 5) = "cStat" Then
               If Mid(Linha, 7, 2) = "01" Then
                  bRetorno = True
               End If
            End If
   
            If bRetorno Then
               If Mid(Linha, 1, 11) = "Nota fiscal" Then
                  If Val(Mid(Linha, 14, 9)) = iNumero Then
                     cnSistema.Execute "Update NFe set " & _
                              "Chave" & I_TabelasNF & " = '" & Mid(Linha, 47, 44) & "' " & _
                              "Where id" & I_TabelasNF & " = " & iId
   
                  End If
               End If
            End If
         Wend
         Close #handle
         If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe.txt") <> "" Then FileCopy I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe.txt", I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Temp\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe.txt"
         If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe-orig.txt") <> "" Then FileCopy I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe-orig.txt", I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Temp\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe-orig.txt"
         If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe.txt") <> "" Then Kill I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe.txt"
         If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe.txt") <> "" Then Kill I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(rsVerificar!DataEmissao, "dd_mm_yyyy") & "-nfe-orig.txt"
      End If
   
      ' Verifica se XML teve erro de conversão
      ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   '   sEmpresaNFe = LerArquivoINI("NFe", "Empresa", CaminhoINI & "\System.ini")
      If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(dData, "dd_mm_yyyy") & "-nfe.err") <> "" Then
         ' Atualizar Chave da NFe
         handle = FreeFile
         Open I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(dData, "dd_mm_yyyy") & "-nfe.err" For Input As #handle
   
         bRetorno = False
         While Not EOF(handle)
            Line Input #handle, Linha
            If Mid(Linha, 1, 5) = "cStat" Then
               If Mid(Linha, 7, 2) = "01" Then
                  bRetorno = True
               End If
            End If
            
            strMensagem = strMensagem & Linha & Chr(13)
         Wend
         
         cnSistema.Execute "Update " & I_TabelasNF & " set " & _
                  "Situacao = 0 " & _
                  "Where id" & I_TabelasNF & " = " & iId
                  
         MsgBox strMensagem, vbExclamation + vbOKOnly, "Erro de envio da NFe"
         Close #handle
         
         Kill I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & StrZero(iNumero, 6) & "_" & RemoveCaracteres(I_Empresa_CNPJ_CPF) & "_001_" & Format(dData, "dd_mm_yyyy") & "-nfe.err"
      End If
      
      ' Verifica se XML não possui erros
      ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   '   sEmpresaNFe = LerArquivoINI("NFe", "Empresa", CaminhoINI & "\System.ini")
      If Dir(I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & sChave & "-nfe.err") <> "" Then
         ' Atualizar Chave da NFe
         handle = FreeFile
         Open I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & sChave & "-nfe.err" For Input As #handle
   
         bRetorno = False
         While Not EOF(handle)
            Line Input #handle, Linha
   
            strMensagem = strMensagem & Linha & Chr(13)
         Wend
   
         cnSistema.Execute "Update " & I_TabelasNF & " set " & _
                  "Situacao = 0 " & _
                  "Where id" & I_TabelasNF & " = " & iId
   
         MsgBox strMensagem, vbExclamation + vbOKOnly, "Erro de envio da NFe"
         Close #handle
   
         Kill I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Retorno\" & sChave & "-nfe.err"
      End If
'   End If

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".ConverterTXT_XML")
End Function

'------------------------------------------------------------------------------------------------------'
' Classe NFs Versão 4.00
' Autor: Robinson
' Função: Classes de Geração do XML da Versão 4.00
' Data da Criação: 29/08/2018
'------------------------------------------------------------------------------------------------------'

Public Function NotasNFsGrupoB(iNumero As Long)
On Error GoTo Erro
 
'''   UTF-8
'''    Dim Arq1 As Integer, caminho As String
'''    Arq1 = FreeFile
'''    Open caminho For Output As Arq1 'caminho do arquivo a ser salvo
'''
'''    Print #Arq1, UTF8_Encode(Conteudo) 'O conteudo é uma string
'''    Close Arq1
 
 
 
   ' Corpo
   Print #1, Space(4) & "<ide>"

   Print #1, Space(6) & FTAG("cUF", rsNFs!cUF)
   Print #1, Space(6) & FTAG("cNF", Mid(rsNFs!cNF, 36, 8))
   Print #1, Space(6) & FTAG("natOp", rsNFs!natOp)
   Print #1, Space(6) & FTAG("mod", rsNFs!Mod)
   Print #1, Space(6) & FTAG("serie", rsNFs!SERIE)
   Print #1, Space(6) & FTAG("nNF", rsNFs!nnf)
   Print #1, Space(6) & FTAG("dhEmi", rsNFs!dhEmi)
   Print #1, Space(6) & FTAG("tpNF", rsNFs!tpNF)
   Print #1, Space(6) & FTAG("idDest", rsNFs!idDest)
   Print #1, Space(6) & FTAG("cMunFG", rsNFs!cMunFG)
   Print #1, Space(6) & FTAG("tpImp", rsNFs!tpImp)
   Print #1, Space(6) & FTAG("tpEmis", rsNFs!tpEmis)
   Print #1, Space(6) & FTAG("cDV", rsNFs!cDV)
   Print #1, Space(6) & FTAG("tpAmb", rsNFs!tpAmb)
   Print #1, Space(6) & FTAG("finNFe", rsNFs!finNFe)
   Print #1, Space(6) & FTAG("indFinal", rsNFs!indFinal)
   Print #1, Space(6) & FTAG("indPres", rsNFs!indPres)
   Print #1, Space(6) & FTAG("procEmi", rsNFs!procEmi)
   Print #1, Space(6) & FTAG("verProc", rsNFs!verProc)

   Print #1, Space(4) & "</ide>"
   
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoB")
End Function

Public Function NotasNFsGrupoC()
On Error GoTo Erro

   Print #1, Space(4) & "<emit>"
   Print #1, Space(6) & FTAG("CNPJ", rsNFsEmitentes!CNPJ)
   Print #1, Space(6) & FTAG("xNome", rsNFsEmitentes!xNome)
   Print #1, Space(6) & FTAG("xFant", rsNFsEmitentes!xFant)
             
   Print #1, Space(6) & "<enderEmit>"
   Print #1, Space(8) & FTAG("xLgr", rsNFsEmitentes!xLgr)
   Print #1, Space(8) & FTAG("nro", rsNFsEmitentes!nro)
   Print #1, Space(8) & FTAG("xBairro", rsNFsEmitentes!xBairro)
   Print #1, Space(8) & FTAG("cMun", rsNFsEmitentes!cMun)
   Print #1, Space(8) & FTAG("xMun", rsNFsEmitentes!xMun)
   Print #1, Space(8) & FTAG("UF", rsNFsEmitentes!UF)
   Print #1, Space(8) & FTAG("CEP", rsNFsEmitentes!CEP)
   Print #1, Space(8) & FTAG("cPais", rsNFsEmitentes!cPais)
   Print #1, Space(8) & FTAG("xPais", rsNFsEmitentes!xPais)
   Print #1, Space(8) & FTAG("fone", rsNFsEmitentes!fone)
   Print #1, Space(6) & "</enderEmit>"
   
   Print #1, Space(6) & FTAG("IE", rsNFsEmitentes!IE)
   If rsNFsEmitentes!CNAE <> "" Then Print #1, Space(6) & FTAG("CNAE", rsNFsEmitentes!CNAE)
   If rsNFsEmitentes!IM <> "" Then Print #1, Space(6) & FTAG("IM", rsNFsEmitentes!IM)
   Print #1, Space(6) & FTAG("CRT", rsNFsEmitentes!CRT)
   
   Print #1, Space(4) & "</emit>"
     
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoC")
End Function

Public Function NotasNFsGrupoE(iNumero As Long)
On Error GoTo Erro

   If rsNFsDestinatarios!xNome <> "Consumidor Final" Then
      ' Destinatario
      '=======================================================================================================
      Print #1, Space(4) & "<dest>"
      If Len(Trim(rsNFsDestinatarios!CNPJ)) > 11 Then
         Print #1, Space(6) & FTAG("CNPJ", rsNFsDestinatarios!CNPJ)
         If Trim(rsNFsDestinatarios!xNome) <> "" Then
            Print #1, Space(6) & FTAG("xNome", rsNFsDestinatarios!xNome)
         End If
      Else
         Print #1, Space(6) & FTAG("CPF", rsNFsDestinatarios!CPF)
         If Trim(rsNFsDestinatarios!xNome) <> "" Then
            Print #1, Space(6) & FTAG("xNome", rsNFsDestinatarios!xNome)
         End If
      End If
      
      ' Não imprimir no modelo 65 - NFCe
      '=======================================================================================================
      Print #1, Space(6) & "<enderDest>"
      Print #1, Space(8) & FTAG("xLgr", rsNFsDestinatarios!xLgr)
      Print #1, Space(8) & FTAG("nro", rsNFsDestinatarios!nro)
      Print #1, Space(8) & FTAG("xBairro", rsNFsDestinatarios!xBairro)
      Print #1, Space(8) & FTAG("cMun", rsNFsDestinatarios!cMun)
      Print #1, Space(8) & FTAG("xMun", rsNFsDestinatarios!xMun)
      Print #1, Space(8) & FTAG("UF", rsNFsDestinatarios!UF)
      Print #1, Space(8) & FTAG("CEP", rsNFsDestinatarios!CEP)
      Print #1, Space(8) & FTAG("cPais", rsNFsDestinatarios!cPais)
      Print #1, Space(8) & FTAG("xPais", rsNFsDestinatarios!xPais)
      Print #1, Space(8) & FTAG("fone", rsNFsDestinatarios!fone)
      Print #1, Space(6) & "</enderDest>"
   
      Print #1, Space(6) & FTAG("indIEDest", rsNFsDestinatarios!indIEDest)
'''''      Print #1, Space(6) & FTAG("IE", rsNFsDestinatarios!IE)
      Print #1, Space(4) & "</dest>"
   End If
   
   Exit Function
Erro:
'   MsgBox "Erro " & Err & ". " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoE"
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoE")
End Function

Public Function NotasNFsGrupoH(iNumero As Long)
On Error GoTo Erro
Dim rsProdutos As New ADODB.Recordset
Dim rsUnidades As New ADODB.Recordset
Dim rsSituacoesTributarias As New ADODB.Recordset
Dim rsTributos As New ADODB.Recordset
Dim rsNaturezasOperacao As New ADODB.Recordset
'''''Dim rsEmpresa As New ADODB.Recordset
Dim rsTemp As New ADODB.Recordset

   ' Itens
   Dim Contador As Integer
   Dim snItemPed As Integer
   Dim sICMSAproveitamento As String
   Contador = 1

   dValorTributos = 0

   rsNFsItens.MoveFirst             ' Ir para o primeiro registro do Produto
   
   Do While Not rsNFsItens.EOF
      Set rsProdutos = cnSistema.Execute("SELECT * FROM Produtos WHERE idProduto = " & rsNFsItens!idProduto)
      
      If rsProdutos!ICMSReaproveitamento > 0 Then
         sICMSAproveitamento = "EMPRESA OPTANTE PELO SIMPLES NACIONAL - ALIQUOTA APLICAVEL DE CALCULO DO CREDITO " & Format(rsProdutos!ICMSReaproveitamento, "###0.00") & "% - R$ " & Format((((rsNFsItens!Quantidade * rsNFsItens!ValorUnitario) * rsProdutos!ICMSReaproveitamento) / 100), "##,###,##0.00")
      Else
         sICMSAproveitamento = ""
      End If
      
      snItemPed = Contador
      
      Print #1, Space(4) & "<det nItem=" & """" & Contador & """" & ">"
      Print #1, Space(6) & "<prod>"
      Print #1, Space(8) & FTAG("cProd", rsNFsItens!cProd)
      Print #1, Space(8) & FTAG("cEAN", rsNFsItens!cEAN)
      Print #1, Space(8) & FTAG("xProd", rsNFsItens!xProd)
      Print #1, Space(8) & FTAG("NCM", rsNFsItens!NCM)
      Print #1, Space(8) & FTAG("CFOP", rsNFsItens!CFOP)
      Print #1, Space(8) & FTAG("uCom", rsNFsItens!uCom)
      Print #1, Space(8) & FTAG("qCom", CStrValor(rsNFsItens!qCom, 2))
      Print #1, Space(8) & FTAG("vUnCom", CStrValor(rsNFsItens!vUnCom, 2))
      Print #1, Space(8) & FTAG("vProd", CStrValor(FValor(rsNFsItens!vProd), 2))
      Print #1, Space(8) & FTAG("cEANTrib", rsNFsItens!cEANTrib)
      Print #1, Space(8) & FTAG("uTrib", rsNFsItens!uTrib)
      Print #1, Space(8) & FTAG("qTrib", CStrValor(rsNFsItens!qTrib, 2))
      Print #1, Space(8) & FTAG("vUnTrib", CStrValor(rsNFsItens!vUnTrib, 2))
      Print #1, Space(8) & FTAG("indTot", rsNFsItens!indTot)
'      Print #1, Space(8) & FTAG("xPed", rsNFsItens!xPed)
'      Print #1, Space(8) & FTAG("nItemPed", rsNFsItens!nItemPed)
      Print #1, Space(6) & "</prod>"
      
      Print #1, Space(6) & "<imposto>"
      
      If rsNFsItens!AliqISS <= 0 Then
         Print #1, Space(8) & "<ICMS>"
      
'''''         Dim Nx As String
         Select Case rsNFsItens!CSOSN
                Case "000" ' Tributada Integralmente
'''''                     If rsNFCeItens!ICMS > 0 Then
'''''                        dCalculoBC = (rsNFCeItens!quantidade * rsNFCeItens!ValorUnitario) - (((rsNFCeItens!quantidade * rsNFCeItens!ValorUnitario) * rsNFCeItens!Desconto) / 100)
'''''
'''''                        sCST = "00"
'''''                        sOrigem = "0"
'''''                        sModalidadeBC = "3"
'''''                        sValorBC = Substitui(Format(dCalculoBC, "#######0.00"), ",", ".")
'''''                        sICMS = Substitui(Format(rsNFCeItens!ICMS, "###0.00"), ",", ".")
'''''                        sValorICMS = Substitui(Format(((dCalculoBC * rsNFCeItens!ICMS) / 100), "#######0.00"), ",", ".")
'''''                     Else
'''''                        dCalculoBC = 0
'''''
'''''                        sCST = "00"
'''''                        sOrigem = "0"
'''''                        sModalidadeBC = "3"
'''''                        sValorBC = Substitui(Format(0, "#######0.00"), ",", ".")
'''''                        sICMS = Substitui(Format(0, "###0.00"), ",", ".")
'''''                        sValorICMS = Substitui(Format(0, "#######0.00"), ",", ".")
'''''                     End If
'''''
'''''                     Print #1, "N02|" & _
'''''                               sOrigem & "|" & _
'''''                               sCST & "|" & _
'''''                               sModalidadeBC & "|" & _
'''''                               sValorBC & "|" & _
'''''                               sICMS & "|" & _
'''''                               sValorICMS & "|"

                Case "010"
'''''                     Nx = "03"
                Case "020"
'''''                     dCalculoBC = Round(((((rsNFCeItens!quantidade * rsNFCeItens!ValorUnitario) - (((rsNFCeItens!quantidade * rsNFCeItens!ValorUnitario) * rsNFCeItens!Desconto) / 100)) * rsNFCeItens!BaseReduzida) / 100), 2)
'''''
'''''                     sCST = "20"
'''''                     sOrigem = "0"
'''''                     sModalidadeBC = "3"
'''''                     sPercRedBC = Substitui(Format(rsNFCeItens!BaseReduzida, "#########0.00"), ",", ".")
'''''                     sValorBC = Substitui(Format(dCalculoBC, "#######0.00"), ",", ".")
'''''                     sICMS = Substitui(Format(rsNFCeItens!ICMS, "###0.00"), ",", ".")
'''''                     sValorICMS = Substitui(Format(((dCalculoBC * rsNFCeItens!ICMS) / 100), "#######0.00"), ",", ".")
'''''
'''''                     Print #1, "N04|" & _
'''''                               sOrigem & "|" & _
'''''                               sCST & "|" & _
'''''                               sModalidadeBC & "|" & _
'''''                               sPercRedBC & "|" & _
'''''                               sValorBC & "|" & _
'''''                               sICMS & "|" & _
'''''                               sValorICMS

                Case "030"
'''''                     Nx = "05"
                Case "040"
'''''                     Nx = "06"
                Case "051"
'''''                     Nx = "07"
                Case "060"
'''''                     Nx = "08"
                Case "070"
'''''                     Nx = "09"
                Case "090"
'''''                     Nx = "10"
         
                Case "101" ' Tributada com permissão de crédito
                     Print #1, Space(10) & "<ICMSSN101>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(12) & FTAG("pCredSN", rsNFsItens!pCredSN)
                     Print #1, Space(12) & FTAG("vCredICMSSN", rsNFsItens!vCredICMSSN)
                     Print #1, Space(10) & "</ICMSSN101>"

                Case "102" ' Tributada pelo Simples Nacional sem permissão de crédito.
                     Print #1, Space(10) & "<ICMSSN102>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(10) & "</ICMSSN102>"
                               
                Case "103" ' Isenção do ICMS no Simples Nacional para faixa de receita bruta.
                     Print #1, Space(10) & "<ICMSSN103>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(10) & "</ICMSSN103>"
                               
                Case "300" ' Imune
                     Print #1, Space(10) & "<ICMSSN300>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(10) & "</ICMSSN300>"
                               
                Case "400" ' Não tributada
                     Print #1, Space(10) & "<ICMSSN400>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(10) & "</ICMSSN400>"
                               
                Case "202" ' Tributada sem permissão de crédito com Substituição Tributaria
                     Print #1, Space(10) & "<ICMSSN202>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(12) & FTAG("modBCST", rsNFsItens!modBCST)
                     Print #1, Space(12) & FTAG("vBCSTRet", rsNFsItens!vBCSTRet)
                     Print #1, Space(12) & FTAG("pMVAST", rsNFsItens!pMVAST)
                     Print #1, Space(12) & FTAG("pRedBCST", rsNFsItens!pRedBCST)
                     Print #1, Space(12) & FTAG("vBCST", rsNFsItens!vBCST)
                     Print #1, Space(12) & FTAG("pICMSST", rsNFsItens!pICMSST)
                     Print #1, Space(12) & FTAG("vICMSST", rsNFsItens!vICMSST)
                     Print #1, Space(12) & FTAG("pFCPST", rsNFsItens!pFCPST)
                     Print #1, Space(12) & FTAG("vFCPST", rsNFsItens!vFCPST)
                     Print #1, Space(10) & "</ICMSSN202>"
         
                Case "500" ' Substituição Tributaria
                     Print #1, Space(10) & "<ICMSSN500>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(12) & FTAG("vBCSTRet", rsNFsItens!vBCSTRet)
                     Print #1, Space(12) & FTAG("vICMSSTRet", rsNFsItens!vICMSSTRet)
                     Print #1, Space(10) & "</ICMSSN500>"
                     
                Case "900" ' Outros
                     Print #1, Space(10) & "<ICMSSN900>"
                     Print #1, Space(12) & FTAG("orig", rsNFsItens!orig)
                     Print #1, Space(12) & FTAG("CSOSN", rsNFsItens!CSOSN)
                     Print #1, Space(12) & FTAG("vBCSTRet", rsNFsItens!vBCSTRet)
                     Print #1, Space(12) & FTAG("vICMSSTRet", rsNFsItens!vICMSSTRet)
                     Print #1, Space(10) & "</ICMSSN900>"
         End Select
         
         Print #1, Space(8) & "</ICMS>"
      
      End If
      
      ' Grupo U
      If rsNFsItens!AliqISS > 0 Then
         Print #1, Space(10) & "<ISSQN>"
         Print #1, Space(12) & FTAG("vBC", rsNFsItens!vBCISS)
         Print #1, Space(12) & FTAG("vAliq", rsNFsItens!vAliqISS)
         Print #1, Space(12) & FTAG("vISSQN", rsNFsItens!vISSQN)
         Print #1, Space(12) & FTAG("cMunFG", rsNFsItens!cMunFGISS)
         Print #1, Space(12) & FTAG("cListServ", rsNFsItens!cListServISS)
         Print #1, Space(12) & FTAG("indISS", rsNFsItens!indISS)
         Print #1, Space(12) & FTAG("indIncentivo", rsNFsItens!indIncentivoISS)
         Print #1, Space(10) & "</ISSQN>"
      End If

    ' PIS
      Print #1, Space(8) & "<PIS>"
      Print #1, Space(10) & "<PISOutr>"
      Print #1, Space(12) & FTAG("CST", "99")
      Print #1, Space(12) & FTAG("vBC", "0.00")
      Print #1, Space(12) & FTAG("pPIS", "0.00")
      Print #1, Space(12) & FTAG("vPIS", "0.00")
      Print #1, Space(10) & "</PISOutr>"
      Print #1, Space(8) & "</PIS>"

    ' Cofins
      Print #1, Space(8) & "<COFINS>"
      Print #1, Space(10) & "<COFINSOutr>"
      Print #1, Space(12) & FTAG("CST", "99")
      Print #1, Space(12) & FTAG("vBC", "0.00")
      Print #1, Space(12) & FTAG("pCOFINS", "0.00")
      Print #1, Space(12) & FTAG("vCOFINS", "0.00")
      Print #1, Space(10) & "</COFINSOutr>"
      Print #1, Space(8) & "</COFINS>"
    
      Print #1, Space(6) & "</imposto>"

      Print #1, Space(4) & "</det>"

      Contador = Contador + 1
      rsNFsItens.MoveNext
   Loop

   ' Limpar Recordsets
   Set rsProdutos = Nothing
   Set rsUnidades = Nothing
   Set rsSituacoesTributarias = Nothing
   Set rsTributos = Nothing
   
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoH")
End Function

Public Function NotasNFsGrupoW(iNumero As Long)
On Error GoTo Erro
   
   ' Totalização do ICMS
   Print #1, Space(4) & "<total>"
   Print #1, Space(6) & "<ICMSTot>"

   Print #1, Space(8) & FTAG("vBC", CStrValor(rsNFsTotaisICMS!vBC, 2))
   Print #1, Space(8) & FTAG("vICMS", CStrValor(rsNFsTotaisICMS!vICMS, 2))
   Print #1, Space(8) & FTAG("vICMSDeson", CStrValor(rsNFsTotaisICMS!vICMSDeson, 2))
'''''   Print #1, Space(8) & FTAG("vFCP", rsNFsTotaisICMS!vFCP)
   Print #1, Space(8) & FTAG("vFCP", rsNFsTotaisICMS!vFCP)
'''''   Print #1, Space(8) & FTAG("vFCPUFDest", CStrValor(rsNFsTotaisICMS!vFCPUFDest, 2))
   Print #1, Space(8) & FTAG("vBCST", CStrValor(rsNFsTotaisICMS!vBCST, 2))
   Print #1, Space(8) & FTAG("vST", CStrValor(rsNFsTotaisICMS!vST, 2))
'''''   Print #1, Space(8) & FTAG("vFCPST", rsNFsTotaisICMS!vFCPST)
   Print #1, Space(8) & FTAG("vFCPST", rsNFsTotaisICMS!vFCPST)
''''   Print #1, Space(8) & FTAG("vFCPSTRet", rsNFsTotaisICMS!vFCPSTRet)
   Print #1, Space(8) & FTAG("vFCPSTRet", rsNFsTotaisICMS!vFCPSTRet)
   Print #1, Space(8) & FTAG("vProd", CStrValor(FValor(rsNFsTotaisICMS!vProd), 2))
   Print #1, Space(8) & FTAG("vFrete", CStrValor(rsNFsTotaisICMS!vFrete, 2))
   Print #1, Space(8) & FTAG("vSeg", CStrValor(rsNFsTotaisICMS!vSeg, 2))
   Print #1, Space(8) & FTAG("vDesc", CStrValor(rsNFsTotaisICMS!vDesc, 2))
   Print #1, Space(8) & FTAG("vII", CStrValor(rsNFsTotaisICMS!vII, 2))
   Print #1, Space(8) & FTAG("vIPI", CStrValor(rsNFsTotaisICMS!vIPI, 2))
'''''   Print #1, Space(8) & FTAG("vIPIDevol", rsNFsTotaisICMS!vIPIDevol)
   Print #1, Space(8) & FTAG("vIPIDevol", rsNFsTotaisICMS!vIPIDevol)
   Print #1, Space(8) & FTAG("vPIS", CStrValor(rsNFsTotaisICMS!vPIS, 2))
   Print #1, Space(8) & FTAG("vCOFINS", CStrValor(rsNFsTotaisICMS!vCOFINS, 2))
   Print #1, Space(8) & FTAG("vOutro", CStrValor(rsNFsTotaisICMS!vOutro, 2))
   Print #1, Space(8) & FTAG("vNF", CStrValor(FValor(rsNFsTotaisICMS!vNF), 2))
''''   Print #1, Space(8) & FTAG("vTotTrib", rsNFsTotaisICMS!vTotTrib)
   
''' NFC-e
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''   ' Totalização do ICMS
'''''   Print #1, Space(4) & "<total>"
'''''   Print #1, Space(6) & "<ICMSTot>"
'''''
'''''   Print #1, Space(8) & FTAG("vBC", sValorTotalBC)
'''''   Print #1, Space(8) & FTAG("vICMS", sValorTotalICMS)
'''''   Print #1, Space(8) & FTAG("vICMSDeson", sValorTotalBaseDeson)
'''''''''   Print #1, Space(8) & FTAG("vFCP", "0.00")
'''''    Print #1, Space(8) & FTAG("vFCPUFDest", "0.00")
'''''    Print #1, Space(8) & FTAG("vICMSUFDest", "0.00")
'''''    Print #1, Space(8) & FTAG("vICMSUFRemet", "0.00")
'''''   Print #1, Space(8) & FTAG("vFCP", "0.00")
'''''   Print #1, Space(8) & FTAG("vBCST", sValorTotalBCST)
'''''   Print #1, Space(8) & FTAG("vST", sValorTotalICMSST)
'''''   Print #1, Space(8) & FTAG("vFCPST", "0.00")
'''''   Print #1, Space(8) & FTAG("vFCPSTRet", "0.00")
'''''   Print #1, Space(8) & FTAG("vProd", sValorTotalProdutos)
'''''   Print #1, Space(8) & FTAG("vFrete", sValorTotalFrete)
'''''   Print #1, Space(8) & FTAG("vSeg", sValorTotalSeguro)
'''''   Print #1, Space(8) & FTAG("vDesc", sValorTotalDesconto)
'''''   Print #1, Space(8) & FTAG("vII", sValorTotalII)
'''''   Print #1, Space(8) & FTAG("vIPI", sValorTotalIPI)
'''''    Print #1, Space(8) & FTAG("vIPIDevol", "0.00")
'''''   Print #1, Space(8) & FTAG("vPIS", sValorTotalPIS)
'''''   Print #1, Space(8) & FTAG("vCOFINS", sValorTotalCofins)
'''''   Print #1, Space(8) & FTAG("vOutro", sValorTotalOutro)
'''''   Print #1, Space(8) & FTAG("vNF", sValorTotalNFe)
'''''
'''''   Print #1, Space(6) & "</ICMSTot>"
'''''
'''''   ' Totalização do ISS
'''''   If dValorTotalBaseISS > 0 Then
'''''      Print #1, Space(6) & "<ISSQNtot>"
'''''      Print #1, Space(8) & FTAG("vServ", sValorTotalBaseISS)
'''''      Print #1, Space(8) & FTAG("vBC", sValorTotalBaseISS)
'''''      Print #1, Space(8) & FTAG("vISS", sValorTotalISS)
'''''      Print #1, Space(8) & FTAG("dCompet", Format(rsNFCe!DataEmissao, "YYYY-MM-DD"))
'''''      Print #1, Space(8) & FTAG("cRegTrib", "1")
'''''      Print #1, Space(6) & "</ISSQNtot>"
'''''   End If
'''''
'''''   Print #1, Space(4) & "</total>"
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   
   Print #1, Space(6) & "</ICMSTot>"
   
   ' Totalização do ISS
   If dValorTotalBaseISS > 0 Then
      Print #1, Space(6) & "<ISSQNtot>"
      Print #1, Space(8) & FTAG("vServ", rsNFsTotaisISS!vServ)
      Print #1, Space(8) & FTAG("vBC", rsNFsTotaisISS!vBC)
      Print #1, Space(8) & FTAG("vISS", rsNFsTotaisISS!vISS)
      Print #1, Space(8) & FTAG("dCompet", rsNFsTotaisISS!dCompet)
      Print #1, Space(8) & FTAG("cRegTrib", rsNFsTotaisISS!cRegTrib)
      Print #1, Space(6) & "</ISSQNtot>"
   End If
   
   Print #1, Space(4) & "</total>"

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoW")
End Function

Public Function NotasNFsGrupoX(iNumero As Long)
On Error GoTo Erro

   Print #1, Space(4) & "<transp>"
   Print #1, Space(6) & FTAG("modFrete", rsNFsTransportes!modFrete)
   
   If Not IsNull(rsNFsTransportes!CNPJ) And Trim(rsNFsTransportes!CNPJ) <> "" Then
      Print #1, Space(6) & "<transporta>"
      Print #1, Space(8) & FTAG("CNPJ", rsNFsTransportes!CNPJ)
      Print #1, Space(8) & FTAG("xNome", rsNFsTransportes!xNome)
      Print #1, Space(8) & FTAG("IE", rsNFsTransportes!IE)
      Print #1, Space(8) & FTAG("xEnder", rsNFsTransportes!xEnder)
      Print #1, Space(8) & FTAG("xMun", rsNFsTransportes!xMun)
      Print #1, Space(8) & FTAG("UF", rsNFsTransportes!UF)
      Print #1, Space(6) & "</transporta>"
   End If
   
   If Not IsNull(rsNFsTransportes!Placa) And Trim(rsNFsTransportes!Placa) <> "" Then
      Print #1, Space(6) & "<veicTransp>"
      Print #1, Space(8) & FTAG("placa", rsNFsTransportes!Placa)
      Print #1, Space(8) & FTAG("UF", rsNFsTransportes!UFVeiculo)
      Print #1, Space(6) & "</veicTransp>"
   End If
   
   Print #1, Space(4) & "</transp>"
     
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoX")
End Function

Public Function NotasNFsGrupoY(iNumero As Long)
On Error GoTo Erro

'' Incluir na natureza de operação o tipo de pagamento
'' Pesquisar em:
''                https://nstecnologia.com.br/blog/formas-de-pagamento-da-nfe-4-0/
''                https://nstecnologia.com.br/blog/rejeicao-871/

   rsNFsPagamentos.MoveFirst
   
   Do While Not rsNFsPagamentos.EOF
      '01=Dinheiro
      '02=Cheque
      '03=Cartão de Crédito
      '04=Cartão de Débito
      '05=Crédito Loja
      '10=Vale Alimentação
      '11=Vale Refeição
      '12=Vale Presente
      '13=Vale Combustível
      '90=Sem pagamento (apenas para NFe)
      '99=Outros

      Print #1, Space(4) & "<pag>"
      Print #1, Space(8) & "<detPag>"
      Print #1, Space(12) & FTAG("tPag", StrZero(rsNFsPagamentos!tPag, 2))
'''''      Print #1, Space(12) & FTAG("vPag", CStrValor(Format(rsNFsPagamentos!vPag, "#########0.00"), 2))
      Print #1, Space(12) & FTAG("vPag", CStrValor(FValor(rsNFsPagamentos!vPag), 2))
      Print #1, Space(8) & "</detPag>"
      Print #1, Space(4) & "</pag>"
   
      rsNFsPagamentos.MoveNext
   Loop

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoY")
End Function

Public Function NotasNFsGrupoZ(iNumero As Long)
On Error GoTo Erro

   Print #1, Space(4) & "<infAdic>"
   Print #1, Space(6) & FTAG("infCpl", RemoveAcentos(rsNFs!InformacoesCorpo) & " " & _
                                       RemoveAcentos(rsNFs!DadosAdicionais) & " - " & _
                                       "Valor Aprox Tributos R$ " & Format(rsNFsTotaisICMS!vTotTrib, "#####,##0.00") & " Fonte: IBPT")
   Print #1, Space(4) & "</infAdic>"
     
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".NotasNFsGrupoZ")
End Function

Private Function FTAG(ByRef sTAG As String, ByRef sConteudo As String) As String
On Error GoTo Erro
   
'   FTAG = "<" & sTAG & ">" & Trim(sConteudo) & "</" & sTAG & ">" '& vbLf
   FTAG = "<" & sTAG & ">" & UTF8_Encode(Trim(sConteudo)) & "</" & sTAG & ">"  '& vbLf

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FTAG")
End Function

Private Function FTAGPrincipal(sNome As String) As String
On Error GoTo Erro
   
   If sNome = "Versao" Then
      FTAGPrincipal = "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "UTF-8" & Chr(34) & "?>"
   ElseIf sNome = "EnvioEvento" Then
      FTAGPrincipal = "<envEvento xmlns=" & Chr(34) & "http://www.portalfiscal.inf.br/nfe" & Chr(34) & " versao=" & Chr(34) & "1.00" & Chr(34) & ">"
   ElseIf sNome = "EnvioEventoMDFe" Then
      FTAGPrincipal = "<envEventoMDFe xmlns=" & Chr(34) & "http://www.portalfiscal.inf.br/mdfe" & Chr(34) & " versao=" & Chr(34) & "3.00" & Chr(34) & ">"
   ElseIf sNome = "Evento" Then
      FTAGPrincipal = "<evento xmlns=" & Chr(34) & "http://www.portalfiscal.inf.br/nfe" & Chr(34) & " versao=" & Chr(34) & "1.00" & Chr(34) & ">"
   End If
   
   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FTAGPrincipal")
End Function

Public Function FConsultarCadastro(ByVal sCNPJ As String, ByVal sUF As String) As String
On Error GoTo Erro
Dim sVerArquivo As String

   ' Envia solicitação de consulta
   Open I_UnidadeNFe & "NF-e\Notas\Notas.TXT" For Output As #1
   
   Print #1, FTAGPrincipal("Versao")
   Print #1, "<ConsCad xmlns=" & Chr(34) & "http://www.portalfiscal.inf.br/nfe" & Chr(34) & " versao=" & Chr(34) & "2.00" & Chr(34) & ">"
   Print #1, "<infCons>"
   Print #1, "<xServ>CONS-CAD</xServ> "
   Print #1, "<UF>" & sUF & "</UF>"
   Print #1, "<CNPJ>" & sCNPJ & "</CNPJ>"
   Print #1, "</infCons>"
   Print #1, "</ConsCad>"
   Close #1
   
   FileCopy I_UnidadeNFe & "NF-e\Notas\Notas.TXT", I_UnidadeNFe & "NF-e\" & I_EmpresaNF & "\Envio\" & sCNPJ & "-cons-cad.xml"
   Kill I_UnidadeNFe & "NF-e\Notas\Notas.TXT"

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FConsultarCadastro")
End Function

'' MDFe-s
''-----------------------------------------------------------------------------------------------------------------------
Public Function FEncerramentoMDFe(ByVal iNumero As Long, ByVal sMotivo As String) As String
On Error GoTo Erro
Dim rsMDFe As New ADODB.Recordset
Dim rsUFs As New ADODB.Recordset
Dim sHora As String

'''''<?xml version="1.0" encoding="utf-8"?>
'''''<eventoMDFe versao="3.00" xmlns="http://www.portalfiscal.inf.br/mdfe">
'''''  <infEvento Id="ID1101115219090403138000018258001000000030104303900102">
'''''    <cOrgao>52</cOrgao>
'''''    <tpAmb>1</tpAmb>
'''''    <CNPJ>04031380000182</CNPJ>
'''''    <chMDFe>52190904031380000182580010000000301043039001</chMDFe>
'''''    <dhEvento>2019-10-30T00:05:00-03:00</dhEvento>
'''''    <tpEvento>110112</tpEvento>
'''''    <nSeqEvento>1</nSeqEvento>
'''''    <detEvento versaoEvento="3.00">
'''''      <evEncMDFe>
'''''        <descEvento>Encerramento</descEvento>
'''''        <nProt>952190005702113</nProt>
'''''        <dtEnc>2019-10-30</dtEnc>
'''''        <cUF>52</cUF>
'''''        <cMun>5212501</cMun>
'''''      </evEncMDFe>
'''''    </detEvento>
'''''  </infEvento>
'''''</eventoMDFe>

   sHora = Format(Time - TimeValue("00:10"), "hh:mm")

   Set rsMDFe = cnSistema.Execute("Select * From MDFe WHERE Numero=" & iNumero)
   If Not rsMDFe.EOF Then

      Open I_UnidadeNFe & I_PastaUNINFe & "Notas\Notas.TXT" For Output As #1
     
      Print #1, FTAGPrincipal("Versao")
      Print #1, FTAGPrincipal("EnvioEventoMDFe")
      Print #1, "<infEvento Id=" & Chr(34) & "ID110112" & rsMDFe!ChaveMDFe & "01" & Chr(34) & ">"
      Print #1, FTAG("cOrgao", I_EmpresaCodigoUF)
      Print #1, FTAG("tpAmb", I_AmbienteNF)                                                             ' 1 - Produção ou 2 - Homologação
      Print #1, FTAG("CNPJ", I_Empresa_CNPJ_CPF)
      Print #1, FTAG("chMDFe", rsMDFe!ChaveMDFe)
      Print #1, FTAG("dhEvento", FData("P", Date, sHora))
      Print #1, FTAG("tpEvento", "110112")
      Print #1, FTAG("nSeqEvento", "1")
      Print #1, "<detEvento versaoEvento=" & Chr(34) & "3.00" & Chr(34) & ">"
      Print #1, "<evEncMDFe>"
      Print #1, "<descEvento>Encerramento</descEvento>"
      Print #1, FTAG("nProt", rsMDFe!Protocoo)
      Print #1, FTAG("dtEnc", Format(Date, "yyyy-mm-dd"))
      Print #1, FTAG("cUF", I_EmpresaCodigoUF)
      Print #1, FTAG("cMun", I_EmpresaCodigoMunicipio)
      Print #1, "</evEncMDFe>"
      Print #1, "</detEvento>"
      Print #1, "</infEvento>"
      Print #1, "</eventoMDFe>"
      Close #1

      Call FArquivosNF("ENCERRARMDFE")
   End If

   Exit Function
Erro:
   Call FRetornaMensagens(Err.Number & " - " & Err.Description & " - " & TypeName(Me) & ".FCartaCorrecao")
End Function


